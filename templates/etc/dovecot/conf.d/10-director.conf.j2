#jinja2: trim_blocks: True, lstrip_blocks: True
# {{ ansible_managed }}

{% if dovecot_director.director_servers is defined and dovecot_director.director_servers | length > 0 %}
director_servers             = {{ dovecot_director.director_servers }}
{% endif %}
{% if dovecot_director.director_mail_servers is defined and dovecot_director.director_mail_servers | length > 0 %}
director_mail_servers        = {{ dovecot_director.director_mail_servers }}
{% endif %}
{% if dovecot_director.director_user_expire is defined and dovecot_director.director_user_expire | length > 0 %}
director_user_expire         = {{ dovecot_director.director_user_expire }}
{% endif %}
{% if dovecot_director.director_username_hash is defined and dovecot_director.director_username_hash | length > 0 %}
director_username_hash       = {{ dovecot_director.director_username_hash }}
{% endif %}

{% if dovecot_director.director_services is defined and dovecot_director.director_services | count > 0 %}
  {% for service in dovecot_director.director_services %}
    {% for key, values in service.items() %}
{# director #}
      {% if key == 'director' %}
service {{ key }} {
        {% for v in values %}
          {% set _listener = v.listener %}
          {% set _ = v.pop('listener') %}
          {% if v.type is defined %}
            {% set _type = v.type %}
            {% set _ = v.pop('type') %}
          {% endif %}

  {{ _listener }}_listener {{ _type | default("") }} {
          {% for x, y in v.items() %}
            {% if y is defined and (y is defined and y | string | length > 0) %}
      {{ x }} = {{ y }}
            {% endif %}
          {% endfor %}
  }
        {% endfor %}
}

{# logins #}
      {% elif key == 'logins' %}
        {% for logins in values %}
          {% for k, v in logins.items() %}

service {{ k }}-login {
            {% for x, y in v.items() %}
              {% if y is defined and (y is defined and y | string | length > 0) %}
  {{ x }} = {{ y }}
              {% endif %}
            {% endfor %}
}
          {% endfor %}
        {% endfor %}

{# protocols #}
      {% elif key == 'protocols' %}
        {% for protocols in values %}
          {% for k, v in protocols.items() %}

protocol {{ k }} {
            {% for x, y in v.items() %}
              {% if y is defined and (y is defined and y | string | length > 0) %}
  {{ x }} = {{ y }}
              {% endif %}
            {% endfor %}
}
          {% endfor %}
        {% endfor %}
      {% endif %}
    {% endfor %}
  {% endfor %}

{% else %}

# To enable director service, uncomment the modes and assign a port.
service director {
  unix_listener login/director {
    #mode = 0666
  }
  fifo_listener login/proxy-notify {
    #mode = 0666
  }
  unix_listener director-userdb {
    #mode = 0600
  }
  inet_listener {
    #port =
  }
}

# Enable director for the wanted login services by telling them to
# connect to director socket instead of the default login socket:
service imap-login {
  #executable = imap-login director
}
service pop3-login {
  #executable = pop3-login director
}
service submission-login {
  #executable = submission-login director
}

# Enable director for LMTP proxying:
protocol lmtp {
  #auth_socket_path = director-userdb
}
{% endif %}
